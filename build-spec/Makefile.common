########################################################################################################

.PHONY: all clean clean-all build package

ALL_PACKAGES = $(notdir $(wildcard pkg-spec/*))

all: package

build: $(patsubst %,build/.%.stg,$(ALL_PACKAGES))

ifeq ($(wildcard /etc/redhat-release),/etc/redhat-release)

   PKG_TARGETS = $(patsubst %,build/.%.rpm_pkg,$(ALL_PACKAGES))
   PKG_OS_TAG = $(shell sed -n -e '1{s/[^0-9]*/r/; s/[.].*//; p;}' /etc/redhat-release)

else ifeq ($(wildcard /etc/lsb-release),/etc/lsb-release)

   PKG_TARGETS = $(patsubst %,build/.%.deb_pkg,$(ALL_PACKAGES))
   PKG_OS_TAG = $(shell sed -n -e '/DISTRIB_RELEASE/{s/.*=/u/; s/[.].*//; p;}' /etc/lsb-release)

else
   $(error "Unsupported system")
endif

package: $(PKG_TARGETS)

clean:
	rm -rf build

clean-all: clean
	rm -rf downloads

build/.%.stg:
	@mkdir -p build/stage/$*
	$(MAKE) PKG_NAME=$* STAGE_DIR=build/stage/$* stage-$*
	@touch $@

build/.%.deb_pkg: build/.%.stg pkg-spec/%/debian/* build-spec/Makefile.%
	@rm -rf "build/tmp/$*"
	@mkdir -p "build/tmp/$*/debian/"
	@cp -a -t "build/tmp/$*/debian/" "pkg-spec/$*/debian"/*
	@$(MAKE) PKG_NAME=$* replace-pkg-vars
	@mkdir -p build/dist
	@cp -a -t "build/tmp/$*/" "build/stage/$*"/*
	@cd build/tmp/$* && dpkg-buildpackage
	@echo
	@mv -v build/tmp/$*_*.* build/dist/;
	@touch $@

build/.%.rpm_pkg: build/.%.stg pkg-spec/%/rpm/* build-spec/Makefile.%
	@rm -rf "build/tmp/$*"
	@mkdir -p "build/tmp/$*/SPECS/"
	@cp -a -t "build/tmp/$*/SPECS/" "pkg-spec/$*/rpm"/*.spec
	@$(MAKE) PKG_NAME=$* replace-pkg-vars
	@mkdir -p build/dist
	@for spec_file in "build/tmp/$*/SPECS"/*.spec; \
	do \
	    mkdir -p "build/tmp/$*/BUILDROOT/"; \
	    cp -a -t "build/tmp/$*/BUILDROOT/" "build/stage/$*"/*; \
	    rpmbuild -v --define "_topdir $$PWD/build/tmp/$*" "--buildroot=$$PWD/build/tmp/$*/BUILDROOT/" -ba "$$spec_file"; \
	    echo; \
	    mv -v build/tmp/$*/SRPMS/*.rpm build/tmp/$*/RPMS/*/*.rpm build/dist/; \
	done
	@touch $@

build-spec/Makefile.%:
	@echo 1>&2
	@echo "Error: ---------------------------------------------------------------------------------------------" 1>&2
	@echo "Error: Missing build-spec/Makefile.$*                                                               " 1>&2
	@echo "Error: This file should have the following target:                                                  " 1>&2
	@echo "Error: build-$*:                                                                                    " 1>&2
	@echo "Error:         @echo This target should place appropriate files in build/dist/$*                    " 1>&2
	@echo "Error: ---------------------------------------------------------------------------------------------" 1>&2
	@echo 1>&2
	@exit 1;

check-env-var:
	@if test -z "$${$(ENV_VAR_NAME)}"; \
	then \
	   echo 1>&2; \
	   echo "Error: -----------------------------------------------------------------------------------------------" 1>&2; \
	   echo "Error: $(ENV_VAR_NAME) is not set.                                                                    " 1>&2; \
	   echo "Error:                                                                                                " 1>&2; \
	   echo "Error: Example:                                                                                       " 1>&2; \
	   echo "Error:    make 'ENV_PKG_VERSION=1.0.0' 'ENV_PKG_RELEASE=1zimbra8.8b1' clean all                       " 1>&2; \
	   echo "Error:           generates: $(PKG_NAME)-1.0.0-1zimbra8.8b1.r7.x86_64.rpm on RHEL/CENTOS               " 1>&2; \
	   echo "Error:    make 'ENV_PKG_VERSION=1.0.0' 'ENV_PKG_RELEASE=1zimbra8.8b1' clean all                       " 1>&2; \
	   echo "Error:           generates: $(PKG_NAME)_1.0.0-1zimbra8.8b1.u16_amd64.deb on UBUNTU                    " 1>&2; \
	   echo "Error: -----------------------------------------------------------------------------------------------" 1>&2; \
	   echo 1>&2; \
	   exit 1; \
	fi

replace-pkg-vars:
	@$(MAKE) "ENV_VAR_NAME=ENV_PKG_VERSION" check-env-var
	@$(MAKE) "ENV_VAR_NAME=ENV_PKG_RELEASE" check-env-var
	@find build/tmp/$(PKG_NAME)/ -type f \
	   | xargs sed -i \
	               -e 's/@@ENV_PKG_RELEASE@@/$(ENV_PKG_RELEASE).$(PKG_OS_TAG)/g' \
	               -e 's/@@ENV_PKG_VERSION@@/$(ENV_PKG_VERSION)/g' \
	               -e 's/@@_PKG_NAME_@@/$(PKG_NAME)/g';


include $(patsubst %,build-spec/Makefile.%,$(ALL_PACKAGES))

########################################################################################################
